sudo: required
dist: trusty
language: c
dist: trusty
compiler:
    #- clang
    - gcc
env:
    global:
        - TRAVIS_PAR_MAKE="-j 4"
        - SOS_GLOBAL_BUILD_OPTS="--enable-picky"
        - FCFLAGS="-fcray-pointer"
        #- PTL_IFACE_NAME=venet0
        - PTL_IFACE_NAME=lo
        ## Enabling FI logging may break UH testing harness
        #- FI_LOG_LEVEL=warn
        - SHMEM_OFI_USE_PROVIDER=sockets
        - SHMEM_INFO=1
        - SOS_ENABLE_ERROR_TESTS=0
    matrix:
        - SOS_BUILD_OPTS="--enable-pmi-simple"
        - SOS_BUILD_OPTS="--enable-ofi-mr=basic --enable-av-map --disable-cxx --enable-memcpy --enable-pmi-simple"

        - >
          SOS_DISABLE_FORTRAN=1
          SOS_BUILD_OPTS="--disable-fortran --enable-error-checking --enable-remote-virtual-addressing --disable-aslr-check --enable-pmi-simple"
        - >
          SOS_ENABLE_ERROR_TESTS=1 SHMEM_SYMMETRIC_HEAP_USE_MALLOC=1
          SOS_BUILD_OPTS="--disable-threads --enable-error-checking --enable-pmi-simple"
        - >
          SOS_BUILD_OPTS="--with-cma --enable-error-checking --enable-profiling --enable-ofi-mr=basic --enable-av-map --enable-remote-virtual-addressing --enable-pmi-simple"
        - >
          SOS_ENABLE_ERROR_TESTS=1
          SHMEM_SYMMETRIC_HEAP_USE_HUGE_PAGES=1 SHMEM_BOUNCE_SIZE=0
          SOS_BUILD_OPTS="--enable-error-checking --enable-remote-virtual-addressing --enable-pmi-simple --enable-ofi-fence"
        - >
          SOS_ENABLE_ERROR_TESTS=1
          SHMEM_BARRIER_ALGORITHM=auto SHMEM_BCAST_ALGORITHM=auto SHMEM_REDUCE_ALGORITHM=auto SHMEM_COLLECT_ALGORITHM=auto SHMEM_FCOLLECT_ALGORITHM=auto
          SOS_BUILD_OPTS="--enable-error-checking --enable-remote-virtual-addressing --enable-thread-completion --enable-pmi-simple"
        - >
          SOS_ENABLE_ERROR_TESTS=1
          SHMEM_BARRIER_ALGORITHM=linear SHMEM_BCAST_ALGORITHM=linear SHMEM_REDUCE_ALGORITHM=linear SHMEM_COLLECT_ALGORITHM=linear SHMEM_FCOLLECT_ALGORITHM=linear
          SOS_BUILD_OPTS="--enable-error-checking --enable-remote-virtual-addressing --enable-pmi-simple"
        - >
          SOS_ENABLE_ERROR_TESTS=1
          SHMEM_BARRIER_ALGORITHM=tree SHMEM_BCAST_ALGORITHM=tree SHMEM_REDUCE_ALGORITHM=tree
          SOS_BUILD_OPTS="--enable-error-checking --enable-remote-virtual-addressing --enable-pmi-simple"
        - >
          SOS_ENABLE_ERROR_TESTS=1
          SHMEM_BARRIER_ALGORITHM=dissem SHMEM_REDUCE_ALGORITHM=recdbl SHMEM_FCOLLECT_ALGORITHM=recdbl
          SOS_BUILD_OPTS="--enable-error-checking --enable-remote-virtual-addressing --enable-pmi-simple"
        - >
          SOS_ENABLE_ERROR_TESTS=1
          SHMEM_FCOLLECT_ALGORITHM=ring
          SOS_BUILD_OPTS="--enable-error-checking --enable-remote-virtual-addressing --enable-pmi-simple"
          SHMEM_OFI_TX_POLL_LIMIT=1 SHMEM_OFI_RX_POLL_LIMIT=1
          SHMEM_OFI_STX_THRESHOLD=1024
        - >
          SOS_ENABLE_ERROR_TESTS=1
          SOS_BUILD_OPTS="--enable-error-checking --enable-remote-virtual-addressing --enable-pmi-simple"
          SHMEM_OFI_STX_MAX=8 SHMEM_OFI_STX_ALLOCATOR=random
        - >
          SOS_BUILD_OPTS="--enable-pmi-simple"
          SOS_CHECK_TARBALL_RPM=1
os:
    - linux

addons:
    apt:
        packages:
            - gfortran
            - rpm
            - cargo
before_install:
    ## Set up the environment
    - mkdir $HOME/travis
    - mkdir $HOME/travis/src
    - mkdir $HOME/travis/install
    - export SOS_SRC=$PWD
    - export TRAVIS_SRC=$HOME/travis/src
    - export TRAVIS_INSTALL=$HOME/travis/install
    ## Disable security protection so CMA will work
    - sudo sysctl -w kernel.yama.ptrace_scope=0
    - sudo sysctl -w kernel.randomize_va_space=0
    ## Build libfabric
    - cd $TRAVIS_SRC
    - git clone -b v1.6.x --depth 10 https://github.com/ofiwg/libfabric.git libfabric
    - cd libfabric
    - ./autogen.sh
    - ./configure --prefix=$TRAVIS_INSTALL/libfabric
    - make $TRAVIS_PAR_MAKE
    - make install
    - cd $TRAVIS_SRC
    - wget https://github.com/libevent/libevent/releases/download/release-2.1.8-stable/libevent-2.1.8-stable.tar.gz
    - tar -xzvf libevent-2.1.8-stable.tar.gz
    - cd libevent-2.1.8-stable
    - ./autogen.sh
    - ./configure --prefix=$TRAVIS_INSTALL/libevent
    - make install
    ## Build hwloc
    - cd $TRAVIS_SRC
    - wget https://download.open-mpi.org/release/hwloc/v2.0/hwloc-2.0.3.tar.gz
    - tar xvzf hwloc-2.0.3.tar.gz
    - cd hwloc-2.0.3
    - ./configure --prefix=$TRAVIS_INSTALL/hwloc
    - make install
    ## Build PMIx
    - cd $TRAVIS_SRC
    - git clone --depth 10 https://github.com/pmix/pmix pmix
    - cd pmix
    - ./autogen.pl
    - ./configure --prefix=$TRAVIS_INSTALL/pmix --with-libevent=$TRAVIS_INSTALL/libevent CFLAGS='-g -O0 -pipe'
    - make install
    ## Build PRRTE
    - cd $TRAVIS_SRC
    - git clone --depth 10 https://github.com/pmix/prrte prrte
    - cd prrte
    - ./autogen.pl
    - ./configure --prefix=$TRAVIS_INSTALL/prrte --with-pmix=$TRAVIS_INSTALL/pmix --with-libevent=$TRAVIS_INSTALL/libevent --with-hwloc=$TRAVIS_INSTALL/hwloc --without-slurm CFLAGS='-g -O0 -pipe'
    - make install

install:
    - cd $SOS_SRC
    - ./autogen.sh

script:
    - export BASE_PATH=$PATH
    ###
    ### Build and check with PMIx
    ###
    - cd $SOS_SRC
    - mkdir pmix-build
    - cd pmix-build
    - export PATH=$TRAVIS_INSTALL/prrte/bin:$BASE_PATH
    - ../configure --prefix=$PWD/install --with-ofi=$TRAVIS_INSTALL/libfabric --with-pmix=$TRAVIS_INSTALL/pmix
    - make $TRAVIS_PAR_MAKE
    - make $TRAVIS_PAR_MAKE check TESTS=
    - prte &
    - sleep 2
    - make VERBOSE=1 TEST_RUNNER="prun -host localhost -oversubscribe -np 2" check
    - killall prte
    - make install
